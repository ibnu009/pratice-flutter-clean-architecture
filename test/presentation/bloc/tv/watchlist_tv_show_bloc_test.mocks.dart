// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/bloc/tv/watchlist_tv_show_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/tv_show.dart' as _i7;
import 'package:ditonton/domain/entities/tv_show_detail.dart' as _i10;
import 'package:ditonton/domain/repositories/tv_show_repository.dart' as _i3;
import 'package:ditonton/domain/usecases/tv/get_watchlist_status.dart' as _i8;
import 'package:ditonton/domain/usecases/tv/get_watchlist_tv_shows.dart' as _i4;
import 'package:ditonton/domain/usecases/tv/remove_watchlist.dart' as _i11;
import 'package:ditonton/domain/usecases/tv/save_watchlist.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTvShowRepository_1 extends _i1.Fake implements _i3.TvShowRepository {
}

/// A class which mocks [GetWatchlistTvShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvShows extends _i1.Mock
    implements _i4.GetWatchlistTvShows {
  MockGetWatchlistTvShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.TvShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.TvShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.TvShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.TvShow>>>);
}

/// A class which mocks [GetWatchListTvShowStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTvShowStatus extends _i1.Mock
    implements _i8.GetWatchListTvShowStatus {
  MockGetWatchListTvShowStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvShowRepository_1()) as _i3.TvShowRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [SaveTvShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvShowWatchlist extends _i1.Mock
    implements _i9.SaveTvShowWatchlist {
  MockSaveTvShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvShowRepository_1()) as _i3.TvShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(
          _i10.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvShow]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveTvShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTvShowWatchlist extends _i1.Mock
    implements _i11.RemoveTvShowWatchlist {
  MockRemoveTvShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvShowRepository_1()) as _i3.TvShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(
          _i10.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvShow]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}
